{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst inputTime = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nconst timeValueElements = document.querySelectorAll('.value');\n\nlet userSelectedDate;\nlet timeInterval;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    userSelectedDate = selectedDates[0];\n    timeInterval = userSelectedDate - new Date();\n\n    if (timeInterval <= 0) {\n      iziToast.error({\n        color: 'red',\n        position: 'topRight',\n        message: `Please choose a date in the future`,\n      });\n      startBtn.disabled = true;\n      inputTime.disabled = false;\n    } else {\n      startBtn.disabled = false;\n      inputTime.disabled = true;\n    }\n  },\n};\n\nconst calendar = flatpickr('#datetime-picker', options);\n\nstartBtn.disabled = true;\n\nstartBtn.addEventListener('click', () => {\n  const repeatTime = setInterval(() => {\n    timeInterval = userSelectedDate - new Date();\n    \n    if (timeInterval < 0) {\n      startBtn.disabled = true;\n      inputTime.disabled = false;\n      clearInterval(repeatTime);\n      return;\n    }\n    const timer = convertMs(timeInterval);\n    timeValueElements[0].textContent = timer.days.toString().padStart(2, '0');\n    timeValueElements[1].textContent = timer.hours.toString().padStart(2, '0');\n    timeValueElements[2].textContent = timer.minutes.toString().padStart(2, '0');\n    timeValueElements[3].textContent = timer.seconds.toString().padStart(2, '0');\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\n\n\n\n\n"],"names":["inputTime","startBtn","timeValueElements","userSelectedDate","timeInterval","options","selectedDates","iziToast","flatpickr","repeatTime","timer","convertMs","ms","days","hours","minutes","seconds"],"mappings":"+IAMA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAoB,SAAS,iBAAiB,QAAQ,EAE5D,IAAIC,EACAC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAC5BH,EAAmBG,EAAc,CAAC,EAClCF,EAAeD,EAAmB,IAAI,KAElCC,GAAgB,GAClBG,EAAS,MAAM,CACb,MAAO,MACP,SAAU,WACV,QAAS,oCACjB,CAAO,EACDN,EAAS,SAAW,GACpBD,EAAU,SAAW,KAErBC,EAAS,SAAW,GACpBD,EAAU,SAAW,GAExB,CACH,EAEiBQ,EAAU,mBAAoBH,CAAO,EAEtDJ,EAAS,SAAW,GAEpBA,EAAS,iBAAiB,QAAS,IAAM,CACvC,MAAMQ,EAAa,YAAY,IAAM,CAGnC,GAFAL,EAAeD,EAAmB,IAAI,KAElCC,EAAe,EAAG,CACpBH,EAAS,SAAW,GACpBD,EAAU,SAAW,GACrB,cAAcS,CAAU,EACxB,MACD,CACD,MAAMC,EAAQC,EAAUP,CAAY,EACpCF,EAAkB,CAAC,EAAE,YAAcQ,EAAM,KAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EACxER,EAAkB,CAAC,EAAE,YAAcQ,EAAM,MAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EACzER,EAAkB,CAAC,EAAE,YAAcQ,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC3ER,EAAkB,CAAC,EAAE,YAAcQ,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,CAC5E,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,QAAQ,IAAIL,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC"}